version: '3.8'

services:
  web:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/panamaster
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ../uploads:/app/uploads
    networks:
      - panamaster-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=panamaster
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - panamaster-network

  redis:
    image: redis:7
    volumes:
      - redis-data:/data
    networks:
      - panamaster-network

  celery:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    command: celery -A app.celery worker --loglevel=info
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/panamaster
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - web
      - db
      - redis
    networks:
      - panamaster-network

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../uploads:/app/uploads
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    networks:
      - panamaster-network

volumes:
  postgres-data:
  redis-data:

networks:
  panamaster-network:
    driver: bridge 